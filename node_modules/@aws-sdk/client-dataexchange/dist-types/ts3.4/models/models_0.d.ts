import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { DataExchangeServiceException as __BaseException } from "./DataExchangeServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const ServerSideEncryptionTypes: {
  readonly AES256: "AES256";
  readonly aws_kms: "aws:kms";
};
export type ServerSideEncryptionTypes =
  (typeof ServerSideEncryptionTypes)[keyof typeof ServerSideEncryptionTypes];
export interface ExportServerSideEncryption {
  KmsKeyArn?: string;
  Type: ServerSideEncryptionTypes | string | undefined;
}
export interface AutoExportRevisionDestinationEntry {
  Bucket: string | undefined;
  KeyPattern?: string;
}
export interface AutoExportRevisionToS3RequestDetails {
  Encryption?: ExportServerSideEncryption;
  RevisionDestination: AutoExportRevisionDestinationEntry | undefined;
}
export interface Action {
  ExportRevisionToS3?: AutoExportRevisionToS3RequestDetails;
}
export declare const ProtocolType: {
  readonly REST: "REST";
};
export type ProtocolType = (typeof ProtocolType)[keyof typeof ProtocolType];
export interface ApiGatewayApiAsset {
  ApiDescription?: string;
  ApiEndpoint?: string;
  ApiId?: string;
  ApiKey?: string;
  ApiName?: string;
  ApiSpecificationDownloadUrl?: string;
  ApiSpecificationDownloadUrlExpiresAt?: Date;
  ProtocolType?: ProtocolType | string;
  Stage?: string;
}
export interface AssetDestinationEntry {
  AssetId: string | undefined;
  Bucket: string | undefined;
  Key?: string;
}
export interface LFTag {
  TagKey: string | undefined;
  TagValues: string[] | undefined;
}
export interface DatabaseLFTagPolicy {
  Expression: LFTag[] | undefined;
}
export interface TableLFTagPolicy {
  Expression: LFTag[] | undefined;
}
export interface LFResourceDetails {
  Database?: DatabaseLFTagPolicy;
  Table?: TableLFTagPolicy;
}
export declare const LFResourceType: {
  readonly DATABASE: "DATABASE";
  readonly TABLE: "TABLE";
};
export type LFResourceType =
  (typeof LFResourceType)[keyof typeof LFResourceType];
export interface LFTagPolicyDetails {
  CatalogId: string | undefined;
  ResourceType: LFResourceType | string | undefined;
  ResourceDetails: LFResourceDetails | undefined;
}
export interface LakeFormationDataPermissionDetails {
  LFTagPolicy?: LFTagPolicyDetails;
}
export declare const LakeFormationDataPermissionType: {
  readonly LFTagPolicy: "LFTagPolicy";
};
export type LakeFormationDataPermissionType =
  (typeof LakeFormationDataPermissionType)[keyof typeof LakeFormationDataPermissionType];
export declare const LFPermission: {
  readonly DESCRIBE: "DESCRIBE";
  readonly SELECT: "SELECT";
};
export type LFPermission = (typeof LFPermission)[keyof typeof LFPermission];
export interface LakeFormationDataPermissionAsset {
  LakeFormationDataPermissionDetails:
    | LakeFormationDataPermissionDetails
    | undefined;
  LakeFormationDataPermissionType:
    | LakeFormationDataPermissionType
    | string
    | undefined;
  Permissions: (LFPermission | string)[] | undefined;
  RoleArn?: string;
}
export interface RedshiftDataShareAsset {
  Arn: string | undefined;
}
export interface KmsKeyToGrant {
  KmsKeyArn: string | undefined;
}
export interface S3DataAccessAsset {
  Bucket: string | undefined;
  KeyPrefixes?: string[];
  Keys?: string[];
  S3AccessPointAlias?: string;
  S3AccessPointArn?: string;
  KmsKeysToGrant?: KmsKeyToGrant[];
}
export interface S3SnapshotAsset {
  Size: number | undefined;
}
export interface AssetDetails {
  S3SnapshotAsset?: S3SnapshotAsset;
  RedshiftDataShareAsset?: RedshiftDataShareAsset;
  ApiGatewayApiAsset?: ApiGatewayApiAsset;
  S3DataAccessAsset?: S3DataAccessAsset;
  LakeFormationDataPermissionAsset?: LakeFormationDataPermissionAsset;
}
export declare const AssetType: {
  readonly API_GATEWAY_API: "API_GATEWAY_API";
  readonly LAKE_FORMATION_DATA_PERMISSION: "LAKE_FORMATION_DATA_PERMISSION";
  readonly REDSHIFT_DATA_SHARE: "REDSHIFT_DATA_SHARE";
  readonly S3_DATA_ACCESS: "S3_DATA_ACCESS";
  readonly S3_SNAPSHOT: "S3_SNAPSHOT";
};
export type AssetType = (typeof AssetType)[keyof typeof AssetType];
export interface AssetEntry {
  Arn: string | undefined;
  AssetDetails: AssetDetails | undefined;
  AssetType: AssetType | string | undefined;
  CreatedAt: Date | undefined;
  DataSetId: string | undefined;
  Id: string | undefined;
  Name: string | undefined;
  RevisionId: string | undefined;
  SourceId?: string;
  UpdatedAt: Date | undefined;
}
export interface AssetSourceEntry {
  Bucket: string | undefined;
  Key: string | undefined;
}
export interface CancelJobRequest {
  JobId: string | undefined;
}
export declare const ResourceType: {
  readonly ASSET: "ASSET";
  readonly DATA_SET: "DATA_SET";
  readonly EVENT_ACTION: "EVENT_ACTION";
  readonly JOB: "JOB";
  readonly REVISION: "REVISION";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId?: string;
  ResourceType?: ResourceType | string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message: string | undefined;
  ResourceId?: string;
  ResourceType?: ResourceType | string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare const ExceptionCause: {
  readonly InsufficientS3BucketPolicy: "InsufficientS3BucketPolicy";
  readonly S3AccessDenied: "S3AccessDenied";
};
export type ExceptionCause =
  (typeof ExceptionCause)[keyof typeof ExceptionCause];
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  ExceptionCause?: ExceptionCause | string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export declare const Code: {
  readonly ACCESS_DENIED_EXCEPTION: "ACCESS_DENIED_EXCEPTION";
  readonly INTERNAL_SERVER_EXCEPTION: "INTERNAL_SERVER_EXCEPTION";
  readonly MALWARE_DETECTED: "MALWARE_DETECTED";
  readonly MALWARE_SCAN_ENCRYPTED_FILE: "MALWARE_SCAN_ENCRYPTED_FILE";
  readonly RESOURCE_NOT_FOUND_EXCEPTION: "RESOURCE_NOT_FOUND_EXCEPTION";
  readonly SERVICE_QUOTA_EXCEEDED_EXCEPTION: "SERVICE_QUOTA_EXCEEDED_EXCEPTION";
  readonly VALIDATION_EXCEPTION: "VALIDATION_EXCEPTION";
};
export type Code = (typeof Code)[keyof typeof Code];
export interface CreateDataSetRequest {
  AssetType: AssetType | string | undefined;
  Description: string | undefined;
  Name: string | undefined;
  Tags?: Record<string, string>;
}
export declare const Origin: {
  readonly ENTITLED: "ENTITLED";
  readonly OWNED: "OWNED";
};
export type Origin = (typeof Origin)[keyof typeof Origin];
export interface OriginDetails {
  ProductId: string | undefined;
}
export interface CreateDataSetResponse {
  Arn?: string;
  AssetType?: AssetType | string;
  CreatedAt?: Date;
  Description?: string;
  Id?: string;
  Name?: string;
  Origin?: Origin | string;
  OriginDetails?: OriginDetails;
  SourceId?: string;
  Tags?: Record<string, string>;
  UpdatedAt?: Date;
}
export declare const LimitName: {
  readonly AWS_Lake_Formation_data_permission_assets_per_revision: "AWS Lake Formation data permission assets per revision";
  readonly Amazon_API_Gateway_API_assets_per_revision: "Amazon API Gateway API assets per revision";
  readonly Amazon_Redshift_datashare_assets_per_import_job_from_Redshift: "Amazon Redshift datashare assets per import job from Redshift";
  readonly Amazon_Redshift_datashare_assets_per_revision: "Amazon Redshift datashare assets per revision";
  readonly Amazon_S3_data_access_assets_per_revision: "Amazon S3 data access assets per revision";
  readonly Asset_per_export_job_from_Amazon_S3: "Asset per export job from Amazon S3";
  readonly Asset_size_in_GB: "Asset size in GB";
  readonly Assets_per_import_job_from_Amazon_S3: "Assets per import job from Amazon S3";
  readonly Assets_per_revision: "Assets per revision";
  readonly Auto_export_event_actions_per_data_set: "Auto export event actions per data set";
  readonly Concurrent_in_progress_jobs_to_create_Amazon_S3_data_access_assets_from_S3_buckets: "Concurrent in progress jobs to create Amazon S3 data access assets from S3 buckets";
  readonly Concurrent_in_progress_jobs_to_export_assets_to_Amazon_S3: "Concurrent in progress jobs to export assets to Amazon S3";
  readonly Concurrent_in_progress_jobs_to_export_assets_to_a_signed_URL: "Concurrent in progress jobs to export assets to a signed URL";
  readonly Concurrent_in_progress_jobs_to_export_revisions_to_Amazon_S3: "Concurrent in progress jobs to export revisions to Amazon S3";
  readonly Concurrent_in_progress_jobs_to_import_assets_from_Amazon_Redshift_datashares: "Concurrent in progress jobs to import assets from Amazon Redshift datashares";
  readonly Concurrent_in_progress_jobs_to_import_assets_from_Amazon_S3: "Concurrent in progress jobs to import assets from Amazon S3";
  readonly Concurrent_in_progress_jobs_to_import_assets_from_a_signed_URL: "Concurrent in progress jobs to import assets from a signed URL";
  readonly Concurrent_in_progress_jobs_to_import_assets_from_an_API_Gateway_API: "Concurrent in progress jobs to import assets from an API Gateway API";
  readonly Concurrent_in_progress_jobs_to_import_assets_from_an_AWS_Lake_Formation_tag_policy: "Concurrent in progress jobs to import assets from an AWS Lake Formation tag policy";
  readonly Data_sets_per_account: "Data sets per account";
  readonly Data_sets_per_product: "Data sets per product";
  readonly Event_actions_per_account: "Event actions per account";
  readonly Products_per_account: "Products per account";
  readonly Revisions_per_AWS_Lake_Formation_data_permission_data_set: "Revisions per AWS Lake Formation data permission data set";
  readonly Revisions_per_Amazon_API_Gateway_API_data_set: "Revisions per Amazon API Gateway API data set";
  readonly Revisions_per_Amazon_Redshift_datashare_data_set: "Revisions per Amazon Redshift datashare data set";
  readonly Revisions_per_Amazon_S3_data_access_data_set: "Revisions per Amazon S3 data access data set";
  readonly Revisions_per_data_set: "Revisions per data set";
};
export type LimitName = (typeof LimitName)[keyof typeof LimitName];
export declare class ServiceLimitExceededException extends __BaseException {
  readonly name: "ServiceLimitExceededException";
  readonly $fault: "client";
  LimitName?: LimitName | string;
  LimitValue?: number;
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceLimitExceededException, __BaseException>
  );
}
export interface RevisionPublished {
  DataSetId: string | undefined;
}
export interface Event {
  RevisionPublished?: RevisionPublished;
}
export interface CreateEventActionRequest {
  Action: Action | undefined;
  Event: Event | undefined;
}
export interface CreateEventActionResponse {
  Action?: Action;
  Arn?: string;
  CreatedAt?: Date;
  Event?: Event;
  Id?: string;
  UpdatedAt?: Date;
}
export interface S3DataAccessAssetSourceEntry {
  Bucket: string | undefined;
  KeyPrefixes?: string[];
  Keys?: string[];
  KmsKeysToGrant?: KmsKeyToGrant[];
}
export interface CreateS3DataAccessFromS3BucketRequestDetails {
  AssetSource: S3DataAccessAssetSourceEntry | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface ExportAssetsToS3RequestDetails {
  AssetDestinations: AssetDestinationEntry[] | undefined;
  DataSetId: string | undefined;
  Encryption?: ExportServerSideEncryption;
  RevisionId: string | undefined;
}
export interface ExportAssetToSignedUrlRequestDetails {
  AssetId: string | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface RevisionDestinationEntry {
  Bucket: string | undefined;
  KeyPattern?: string;
  RevisionId: string | undefined;
}
export interface ExportRevisionsToS3RequestDetails {
  DataSetId: string | undefined;
  Encryption?: ExportServerSideEncryption;
  RevisionDestinations: RevisionDestinationEntry[] | undefined;
}
export interface ImportAssetFromApiGatewayApiRequestDetails {
  ApiDescription?: string;
  ApiId: string | undefined;
  ApiKey?: string;
  ApiName: string | undefined;
  ApiSpecificationMd5Hash: string | undefined;
  DataSetId: string | undefined;
  ProtocolType: ProtocolType | string | undefined;
  RevisionId: string | undefined;
  Stage: string | undefined;
}
export interface ImportAssetFromSignedUrlRequestDetails {
  AssetName: string | undefined;
  DataSetId: string | undefined;
  Md5Hash: string | undefined;
  RevisionId: string | undefined;
}
export declare const DatabaseLFTagPolicyPermission: {
  readonly DESCRIBE: "DESCRIBE";
};
export type DatabaseLFTagPolicyPermission =
  (typeof DatabaseLFTagPolicyPermission)[keyof typeof DatabaseLFTagPolicyPermission];
export interface DatabaseLFTagPolicyAndPermissions {
  Expression: LFTag[] | undefined;
  Permissions: (DatabaseLFTagPolicyPermission | string)[] | undefined;
}
export declare const TableTagPolicyLFPermission: {
  readonly DESCRIBE: "DESCRIBE";
  readonly SELECT: "SELECT";
};
export type TableTagPolicyLFPermission =
  (typeof TableTagPolicyLFPermission)[keyof typeof TableTagPolicyLFPermission];
export interface TableLFTagPolicyAndPermissions {
  Expression: LFTag[] | undefined;
  Permissions: (TableTagPolicyLFPermission | string)[] | undefined;
}
export interface ImportAssetsFromLakeFormationTagPolicyRequestDetails {
  CatalogId: string | undefined;
  Database?: DatabaseLFTagPolicyAndPermissions;
  Table?: TableLFTagPolicyAndPermissions;
  RoleArn: string | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface RedshiftDataShareAssetSourceEntry {
  DataShareArn: string | undefined;
}
export interface ImportAssetsFromRedshiftDataSharesRequestDetails {
  AssetSources: RedshiftDataShareAssetSourceEntry[] | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface ImportAssetsFromS3RequestDetails {
  AssetSources: AssetSourceEntry[] | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface RequestDetails {
  ExportAssetToSignedUrl?: ExportAssetToSignedUrlRequestDetails;
  ExportAssetsToS3?: ExportAssetsToS3RequestDetails;
  ExportRevisionsToS3?: ExportRevisionsToS3RequestDetails;
  ImportAssetFromSignedUrl?: ImportAssetFromSignedUrlRequestDetails;
  ImportAssetsFromS3?: ImportAssetsFromS3RequestDetails;
  ImportAssetsFromRedshiftDataShares?: ImportAssetsFromRedshiftDataSharesRequestDetails;
  ImportAssetFromApiGatewayApi?: ImportAssetFromApiGatewayApiRequestDetails;
  CreateS3DataAccessFromS3Bucket?: CreateS3DataAccessFromS3BucketRequestDetails;
  ImportAssetsFromLakeFormationTagPolicy?: ImportAssetsFromLakeFormationTagPolicyRequestDetails;
}
export declare const Type: {
  readonly CREATE_S3_DATA_ACCESS_FROM_S3_BUCKET: "CREATE_S3_DATA_ACCESS_FROM_S3_BUCKET";
  readonly EXPORT_ASSETS_TO_S3: "EXPORT_ASSETS_TO_S3";
  readonly EXPORT_ASSET_TO_SIGNED_URL: "EXPORT_ASSET_TO_SIGNED_URL";
  readonly EXPORT_REVISIONS_TO_S3: "EXPORT_REVISIONS_TO_S3";
  readonly IMPORT_ASSETS_FROM_LAKE_FORMATION_TAG_POLICY: "IMPORT_ASSETS_FROM_LAKE_FORMATION_TAG_POLICY";
  readonly IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES: "IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES";
  readonly IMPORT_ASSETS_FROM_S3: "IMPORT_ASSETS_FROM_S3";
  readonly IMPORT_ASSET_FROM_API_GATEWAY_API: "IMPORT_ASSET_FROM_API_GATEWAY_API";
  readonly IMPORT_ASSET_FROM_SIGNED_URL: "IMPORT_ASSET_FROM_SIGNED_URL";
};
export type Type = (typeof Type)[keyof typeof Type];
export interface CreateJobRequest {
  Details: RequestDetails | undefined;
  Type: Type | string | undefined;
}
export interface CreateS3DataAccessFromS3BucketResponseDetails {
  AssetSource: S3DataAccessAssetSourceEntry | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface ExportAssetsToS3ResponseDetails {
  AssetDestinations: AssetDestinationEntry[] | undefined;
  DataSetId: string | undefined;
  Encryption?: ExportServerSideEncryption;
  RevisionId: string | undefined;
}
export interface ExportAssetToSignedUrlResponseDetails {
  AssetId: string | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
  SignedUrl?: string;
  SignedUrlExpiresAt?: Date;
}
export interface ExportRevisionsToS3ResponseDetails {
  DataSetId: string | undefined;
  Encryption?: ExportServerSideEncryption;
  RevisionDestinations: RevisionDestinationEntry[] | undefined;
  EventActionArn?: string;
}
export interface ImportAssetFromApiGatewayApiResponseDetails {
  ApiDescription?: string;
  ApiId: string | undefined;
  ApiKey?: string;
  ApiName: string | undefined;
  ApiSpecificationMd5Hash: string | undefined;
  ApiSpecificationUploadUrl: string | undefined;
  ApiSpecificationUploadUrlExpiresAt: Date | undefined;
  DataSetId: string | undefined;
  ProtocolType: ProtocolType | string | undefined;
  RevisionId: string | undefined;
  Stage: string | undefined;
}
export interface ImportAssetFromSignedUrlResponseDetails {
  AssetName: string | undefined;
  DataSetId: string | undefined;
  Md5Hash?: string;
  RevisionId: string | undefined;
  SignedUrl?: string;
  SignedUrlExpiresAt?: Date;
}
export interface ImportAssetsFromLakeFormationTagPolicyResponseDetails {
  CatalogId: string | undefined;
  Database?: DatabaseLFTagPolicyAndPermissions;
  Table?: TableLFTagPolicyAndPermissions;
  RoleArn: string | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface ImportAssetsFromRedshiftDataSharesResponseDetails {
  AssetSources: RedshiftDataShareAssetSourceEntry[] | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface ImportAssetsFromS3ResponseDetails {
  AssetSources: AssetSourceEntry[] | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface ResponseDetails {
  ExportAssetToSignedUrl?: ExportAssetToSignedUrlResponseDetails;
  ExportAssetsToS3?: ExportAssetsToS3ResponseDetails;
  ExportRevisionsToS3?: ExportRevisionsToS3ResponseDetails;
  ImportAssetFromSignedUrl?: ImportAssetFromSignedUrlResponseDetails;
  ImportAssetsFromS3?: ImportAssetsFromS3ResponseDetails;
  ImportAssetsFromRedshiftDataShares?: ImportAssetsFromRedshiftDataSharesResponseDetails;
  ImportAssetFromApiGatewayApi?: ImportAssetFromApiGatewayApiResponseDetails;
  CreateS3DataAccessFromS3Bucket?: CreateS3DataAccessFromS3BucketResponseDetails;
  ImportAssetsFromLakeFormationTagPolicy?: ImportAssetsFromLakeFormationTagPolicyResponseDetails;
}
export interface ImportAssetFromSignedUrlJobErrorDetails {
  AssetName: string | undefined;
}
export interface Details {
  ImportAssetFromSignedUrlJobErrorDetails?: ImportAssetFromSignedUrlJobErrorDetails;
  ImportAssetsFromS3JobErrorDetails?: AssetSourceEntry[];
}
export declare const JobErrorLimitName: {
  readonly AWS_Lake_Formation_data_permission_assets_per_revision: "AWS Lake Formation data permission assets per revision";
  readonly Amazon_Redshift_datashare_assets_per_revision: "Amazon Redshift datashare assets per revision";
  readonly Amazon_S3_data_access_assets_per_revision: "Amazon S3 data access assets per revision";
  readonly Asset_size_in_GB: "Asset size in GB";
  readonly Assets_per_revision: "Assets per revision";
};
export type JobErrorLimitName =
  (typeof JobErrorLimitName)[keyof typeof JobErrorLimitName];
export declare const JobErrorResourceTypes: {
  readonly ASSET: "ASSET";
  readonly DATA_SET: "DATA_SET";
  readonly REVISION: "REVISION";
};
export type JobErrorResourceTypes =
  (typeof JobErrorResourceTypes)[keyof typeof JobErrorResourceTypes];
export interface JobError {
  Code: Code | string | undefined;
  Details?: Details;
  LimitName?: JobErrorLimitName | string;
  LimitValue?: number;
  Message: string | undefined;
  ResourceId?: string;
  ResourceType?: JobErrorResourceTypes | string;
}
export declare const State: {
  readonly CANCELLED: "CANCELLED";
  readonly COMPLETED: "COMPLETED";
  readonly ERROR: "ERROR";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly TIMED_OUT: "TIMED_OUT";
  readonly WAITING: "WAITING";
};
export type State = (typeof State)[keyof typeof State];
export interface CreateJobResponse {
  Arn?: string;
  CreatedAt?: Date;
  Details?: ResponseDetails;
  Errors?: JobError[];
  Id?: string;
  State?: State | string;
  Type?: Type | string;
  UpdatedAt?: Date;
}
export interface CreateRevisionRequest {
  Comment?: string;
  DataSetId: string | undefined;
  Tags?: Record<string, string>;
}
export interface CreateRevisionResponse {
  Arn?: string;
  Comment?: string;
  CreatedAt?: Date;
  DataSetId?: string;
  Finalized?: boolean;
  Id?: string;
  SourceId?: string;
  Tags?: Record<string, string>;
  UpdatedAt?: Date;
  RevocationComment?: string;
  Revoked?: boolean;
  RevokedAt?: Date;
}
export interface DeleteAssetRequest {
  AssetId: string | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface DeleteDataSetRequest {
  DataSetId: string | undefined;
}
export interface DeleteEventActionRequest {
  EventActionId: string | undefined;
}
export interface DeleteRevisionRequest {
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface GetAssetRequest {
  AssetId: string | undefined;
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface GetAssetResponse {
  Arn?: string;
  AssetDetails?: AssetDetails;
  AssetType?: AssetType | string;
  CreatedAt?: Date;
  DataSetId?: string;
  Id?: string;
  Name?: string;
  RevisionId?: string;
  SourceId?: string;
  UpdatedAt?: Date;
}
export interface GetDataSetRequest {
  DataSetId: string | undefined;
}
export interface GetDataSetResponse {
  Arn?: string;
  AssetType?: AssetType | string;
  CreatedAt?: Date;
  Description?: string;
  Id?: string;
  Name?: string;
  Origin?: Origin | string;
  OriginDetails?: OriginDetails;
  SourceId?: string;
  Tags?: Record<string, string>;
  UpdatedAt?: Date;
}
export interface GetEventActionRequest {
  EventActionId: string | undefined;
}
export interface GetEventActionResponse {
  Action?: Action;
  Arn?: string;
  CreatedAt?: Date;
  Event?: Event;
  Id?: string;
  UpdatedAt?: Date;
}
export interface GetJobRequest {
  JobId: string | undefined;
}
export interface GetJobResponse {
  Arn?: string;
  CreatedAt?: Date;
  Details?: ResponseDetails;
  Errors?: JobError[];
  Id?: string;
  State?: State | string;
  Type?: Type | string;
  UpdatedAt?: Date;
}
export interface GetRevisionRequest {
  DataSetId: string | undefined;
  RevisionId: string | undefined;
}
export interface GetRevisionResponse {
  Arn?: string;
  Comment?: string;
  CreatedAt?: Date;
  DataSetId?: string;
  Finalized?: boolean;
  Id?: string;
  SourceId?: string;
  Tags?: Record<string, string>;
  UpdatedAt?: Date;
  RevocationComment?: string;
  Revoked?: boolean;
  RevokedAt?: Date;
}
export interface ListDataSetRevisionsRequest {
  DataSetId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface RevisionEntry {
  Arn: string | undefined;
  Comment?: string;
  CreatedAt: Date | undefined;
  DataSetId: string | undefined;
  Finalized?: boolean;
  Id: string | undefined;
  SourceId?: string;
  UpdatedAt: Date | undefined;
  RevocationComment?: string;
  Revoked?: boolean;
  RevokedAt?: Date;
}
export interface ListDataSetRevisionsResponse {
  NextToken?: string;
  Revisions?: RevisionEntry[];
}
export interface ListDataSetsRequest {
  MaxResults?: number;
  NextToken?: string;
  Origin?: string;
}
export interface DataSetEntry {
  Arn: string | undefined;
  AssetType: AssetType | string | undefined;
  CreatedAt: Date | undefined;
  Description: string | undefined;
  Id: string | undefined;
  Name: string | undefined;
  Origin: Origin | string | undefined;
  OriginDetails?: OriginDetails;
  SourceId?: string;
  UpdatedAt: Date | undefined;
}
export interface ListDataSetsResponse {
  DataSets?: DataSetEntry[];
  NextToken?: string;
}
export interface ListEventActionsRequest {
  EventSourceId?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface EventActionEntry {
  Action: Action | undefined;
  Arn: string | undefined;
  CreatedAt: Date | undefined;
  Event: Event | undefined;
  Id: string | undefined;
  UpdatedAt: Date | undefined;
}
export interface ListEventActionsResponse {
  EventActions?: EventActionEntry[];
  NextToken?: string;
}
export interface ListJobsRequest {
  DataSetId?: string;
  MaxResults?: number;
  NextToken?: string;
  RevisionId?: string;
}
export interface JobEntry {
  Arn: string | undefined;
  CreatedAt: Date | undefined;
  Details: ResponseDetails | undefined;
  Errors?: JobError[];
  Id: string | undefined;
  State: State | string | undefined;
  Type: Type | string | undefined;
  UpdatedAt: Date | undefined;
}
export interface ListJobsResponse {
  Jobs?: JobEntry[];
  NextToken?: string;
}
export interface ListRevisionAssetsRequest {
  DataSetId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  RevisionId: string | undefined;
}
export interface ListRevisionAssetsResponse {
  Assets?: AssetEntry[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface RevokeRevisionRequest {
  DataSetId: string | undefined;
  RevisionId: string | undefined;
  RevocationComment: string | undefined;
}
export interface RevokeRevisionResponse {
  Arn?: string;
  Comment?: string;
  CreatedAt?: Date;
  DataSetId?: string;
  Finalized?: boolean;
  Id?: string;
  SourceId?: string;
  UpdatedAt?: Date;
  RevocationComment?: string;
  Revoked?: boolean;
  RevokedAt?: Date;
}
export interface SendApiAssetRequest {
  Body?: string;
  QueryStringParameters?: Record<string, string>;
  AssetId: string | undefined;
  DataSetId: string | undefined;
  RequestHeaders?: Record<string, string>;
  Method?: string;
  Path?: string;
  RevisionId: string | undefined;
}
export interface SendApiAssetResponse {
  Body?: string;
  ResponseHeaders?: Record<string, string>;
}
export interface StartJobRequest {
  JobId: string | undefined;
}
export interface StartJobResponse {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UpdateAssetRequest {
  AssetId: string | undefined;
  DataSetId: string | undefined;
  Name: string | undefined;
  RevisionId: string | undefined;
}
export interface UpdateAssetResponse {
  Arn?: string;
  AssetDetails?: AssetDetails;
  AssetType?: AssetType | string;
  CreatedAt?: Date;
  DataSetId?: string;
  Id?: string;
  Name?: string;
  RevisionId?: string;
  SourceId?: string;
  UpdatedAt?: Date;
}
export interface UpdateDataSetRequest {
  DataSetId: string | undefined;
  Description?: string;
  Name?: string;
}
export interface UpdateDataSetResponse {
  Arn?: string;
  AssetType?: AssetType | string;
  CreatedAt?: Date;
  Description?: string;
  Id?: string;
  Name?: string;
  Origin?: Origin | string;
  OriginDetails?: OriginDetails;
  SourceId?: string;
  UpdatedAt?: Date;
}
export interface UpdateEventActionRequest {
  Action?: Action;
  EventActionId: string | undefined;
}
export interface UpdateEventActionResponse {
  Action?: Action;
  Arn?: string;
  CreatedAt?: Date;
  Event?: Event;
  Id?: string;
  UpdatedAt?: Date;
}
export interface UpdateRevisionRequest {
  Comment?: string;
  DataSetId: string | undefined;
  Finalized?: boolean;
  RevisionId: string | undefined;
}
export interface UpdateRevisionResponse {
  Arn?: string;
  Comment?: string;
  CreatedAt?: Date;
  DataSetId?: string;
  Finalized?: boolean;
  Id?: string;
  SourceId?: string;
  UpdatedAt?: Date;
  RevocationComment?: string;
  Revoked?: boolean;
  RevokedAt?: Date;
}
