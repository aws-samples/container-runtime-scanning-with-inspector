import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { DataExchangeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DataExchangeClient";
import { CreateJobRequest, CreateJobResponse } from "../models/models_0";
/**
 * @public
 *
 * The input for {@link CreateJobCommand}.
 */
export interface CreateJobCommandInput extends CreateJobRequest {
}
/**
 * @public
 *
 * The output of {@link CreateJobCommand}.
 */
export interface CreateJobCommandOutput extends CreateJobResponse, __MetadataBearer {
}
/**
 * @public
 * <p>This operation creates a job.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { DataExchangeClient, CreateJobCommand } from "@aws-sdk/client-dataexchange"; // ES Modules import
 * // const { DataExchangeClient, CreateJobCommand } = require("@aws-sdk/client-dataexchange"); // CommonJS import
 * const client = new DataExchangeClient(config);
 * const input = { // CreateJobRequest
 *   Details: { // RequestDetails
 *     ExportAssetToSignedUrl: { // ExportAssetToSignedUrlRequestDetails
 *       AssetId: "STRING_VALUE", // required
 *       DataSetId: "STRING_VALUE", // required
 *       RevisionId: "STRING_VALUE", // required
 *     },
 *     ExportAssetsToS3: { // ExportAssetsToS3RequestDetails
 *       AssetDestinations: [ // ListOfAssetDestinationEntry // required
 *         { // AssetDestinationEntry
 *           AssetId: "STRING_VALUE", // required
 *           Bucket: "STRING_VALUE", // required
 *           Key: "STRING_VALUE",
 *         },
 *       ],
 *       DataSetId: "STRING_VALUE", // required
 *       Encryption: { // ExportServerSideEncryption
 *         KmsKeyArn: "STRING_VALUE",
 *         Type: "STRING_VALUE", // required
 *       },
 *       RevisionId: "STRING_VALUE", // required
 *     },
 *     ExportRevisionsToS3: { // ExportRevisionsToS3RequestDetails
 *       DataSetId: "STRING_VALUE", // required
 *       Encryption: {
 *         KmsKeyArn: "STRING_VALUE",
 *         Type: "STRING_VALUE", // required
 *       },
 *       RevisionDestinations: [ // ListOfRevisionDestinationEntry // required
 *         { // RevisionDestinationEntry
 *           Bucket: "STRING_VALUE", // required
 *           KeyPattern: "STRING_VALUE",
 *           RevisionId: "STRING_VALUE", // required
 *         },
 *       ],
 *     },
 *     ImportAssetFromSignedUrl: { // ImportAssetFromSignedUrlRequestDetails
 *       AssetName: "STRING_VALUE", // required
 *       DataSetId: "STRING_VALUE", // required
 *       Md5Hash: "STRING_VALUE", // required
 *       RevisionId: "STRING_VALUE", // required
 *     },
 *     ImportAssetsFromS3: { // ImportAssetsFromS3RequestDetails
 *       AssetSources: [ // ListOfAssetSourceEntry // required
 *         { // AssetSourceEntry
 *           Bucket: "STRING_VALUE", // required
 *           Key: "STRING_VALUE", // required
 *         },
 *       ],
 *       DataSetId: "STRING_VALUE", // required
 *       RevisionId: "STRING_VALUE", // required
 *     },
 *     ImportAssetsFromRedshiftDataShares: { // ImportAssetsFromRedshiftDataSharesRequestDetails
 *       AssetSources: [ // ListOfRedshiftDataShareAssetSourceEntry // required
 *         { // RedshiftDataShareAssetSourceEntry
 *           DataShareArn: "STRING_VALUE", // required
 *         },
 *       ],
 *       DataSetId: "STRING_VALUE", // required
 *       RevisionId: "STRING_VALUE", // required
 *     },
 *     ImportAssetFromApiGatewayApi: { // ImportAssetFromApiGatewayApiRequestDetails
 *       ApiDescription: "STRING_VALUE",
 *       ApiId: "STRING_VALUE", // required
 *       ApiKey: "STRING_VALUE",
 *       ApiName: "STRING_VALUE", // required
 *       ApiSpecificationMd5Hash: "STRING_VALUE", // required
 *       DataSetId: "STRING_VALUE", // required
 *       ProtocolType: "STRING_VALUE", // required
 *       RevisionId: "STRING_VALUE", // required
 *       Stage: "STRING_VALUE", // required
 *     },
 *     CreateS3DataAccessFromS3Bucket: { // CreateS3DataAccessFromS3BucketRequestDetails
 *       AssetSource: { // S3DataAccessAssetSourceEntry
 *         Bucket: "STRING_VALUE", // required
 *         KeyPrefixes: [ // ListOf__string
 *           "STRING_VALUE",
 *         ],
 *         Keys: [
 *           "STRING_VALUE",
 *         ],
 *         KmsKeysToGrant: [ // ListOfKmsKeysToGrant
 *           { // KmsKeyToGrant
 *             KmsKeyArn: "STRING_VALUE", // required
 *           },
 *         ],
 *       },
 *       DataSetId: "STRING_VALUE", // required
 *       RevisionId: "STRING_VALUE", // required
 *     },
 *     ImportAssetsFromLakeFormationTagPolicy: { // ImportAssetsFromLakeFormationTagPolicyRequestDetails
 *       CatalogId: "STRING_VALUE", // required
 *       Database: { // DatabaseLFTagPolicyAndPermissions
 *         Expression: [ // ListOfLFTags // required
 *           { // LFTag
 *             TagKey: "STRING_VALUE", // required
 *             TagValues: [ // ListOfLFTagValues // required
 *               "STRING_VALUE",
 *             ],
 *           },
 *         ],
 *         Permissions: [ // ListOfDatabaseLFTagPolicyPermissions // required
 *           "STRING_VALUE",
 *         ],
 *       },
 *       Table: { // TableLFTagPolicyAndPermissions
 *         Expression: [ // required
 *           {
 *             TagKey: "STRING_VALUE", // required
 *             TagValues: [ // required
 *               "STRING_VALUE",
 *             ],
 *           },
 *         ],
 *         Permissions: [ // ListOfTableTagPolicyLFPermissions // required
 *           "STRING_VALUE",
 *         ],
 *       },
 *       RoleArn: "STRING_VALUE", // required
 *       DataSetId: "STRING_VALUE", // required
 *       RevisionId: "STRING_VALUE", // required
 *     },
 *   },
 *   Type: "STRING_VALUE", // required
 * };
 * const command = new CreateJobCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @param CreateJobCommandInput - {@link CreateJobCommandInput}
 * @returns {@link CreateJobCommandOutput}
 * @see {@link CreateJobCommandInput} for command's `input` shape.
 * @see {@link CreateJobCommandOutput} for command's `response` shape.
 * @see {@link DataExchangeClientResolvedConfig | config} for DataExchangeClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>Access to the resource is denied.</p>
 *
 * @throws {@link ConflictException} (client fault)
 *  <p>The request couldn't be completed because it conflicted with the current state of the resource.</p>
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>An exception occurred with the service.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The resource couldn't be found.</p>
 *
 * @throws {@link ThrottlingException} (client fault)
 *  <p>The limit on the number of requests per second was exceeded.</p>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>The request was invalid.</p>
 *
 *
 */
export declare class CreateJobCommand extends $Command<CreateJobCommandInput, CreateJobCommandOutput, DataExchangeClientResolvedConfig> {
    readonly input: CreateJobCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: CreateJobCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DataExchangeClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateJobCommandInput, CreateJobCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
