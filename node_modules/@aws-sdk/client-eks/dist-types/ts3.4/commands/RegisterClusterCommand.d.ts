import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  EKSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EKSClient";
import {
  RegisterClusterRequest,
  RegisterClusterResponse,
} from "../models/models_0";
export interface RegisterClusterCommandInput extends RegisterClusterRequest {}
export interface RegisterClusterCommandOutput
  extends RegisterClusterResponse,
    __MetadataBearer {}
export declare class RegisterClusterCommand extends $Command<
  RegisterClusterCommandInput,
  RegisterClusterCommandOutput,
  EKSClientResolvedConfig
> {
  readonly input: RegisterClusterCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: RegisterClusterCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EKSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<RegisterClusterCommandInput, RegisterClusterCommandOutput>;
  private serialize;
  private deserialize;
}
