import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  EKSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EKSClient";
import {
  DescribeNodegroupRequest,
  DescribeNodegroupResponse,
} from "../models/models_0";
export interface DescribeNodegroupCommandInput
  extends DescribeNodegroupRequest {}
export interface DescribeNodegroupCommandOutput
  extends DescribeNodegroupResponse,
    __MetadataBearer {}
export declare class DescribeNodegroupCommand extends $Command<
  DescribeNodegroupCommandInput,
  DescribeNodegroupCommandOutput,
  EKSClientResolvedConfig
> {
  readonly input: DescribeNodegroupCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeNodegroupCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EKSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<DescribeNodegroupCommandInput, DescribeNodegroupCommandOutput>;
  private serialize;
  private deserialize;
}
