import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  EKSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EKSClient";
import {
  DescribeAddonRequest,
  DescribeAddonResponse,
} from "../models/models_0";
export interface DescribeAddonCommandInput extends DescribeAddonRequest {}
export interface DescribeAddonCommandOutput
  extends DescribeAddonResponse,
    __MetadataBearer {}
export declare class DescribeAddonCommand extends $Command<
  DescribeAddonCommandInput,
  DescribeAddonCommandOutput,
  EKSClientResolvedConfig
> {
  readonly input: DescribeAddonCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeAddonCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EKSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<DescribeAddonCommandInput, DescribeAddonCommandOutput>;
  private serialize;
  private deserialize;
}
