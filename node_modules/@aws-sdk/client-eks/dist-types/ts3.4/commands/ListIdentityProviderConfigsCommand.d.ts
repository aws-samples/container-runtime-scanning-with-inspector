import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  EKSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EKSClient";
import {
  ListIdentityProviderConfigsRequest,
  ListIdentityProviderConfigsResponse,
} from "../models/models_0";
export interface ListIdentityProviderConfigsCommandInput
  extends ListIdentityProviderConfigsRequest {}
export interface ListIdentityProviderConfigsCommandOutput
  extends ListIdentityProviderConfigsResponse,
    __MetadataBearer {}
export declare class ListIdentityProviderConfigsCommand extends $Command<
  ListIdentityProviderConfigsCommandInput,
  ListIdentityProviderConfigsCommandOutput,
  EKSClientResolvedConfig
> {
  readonly input: ListIdentityProviderConfigsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ListIdentityProviderConfigsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EKSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    ListIdentityProviderConfigsCommandInput,
    ListIdentityProviderConfigsCommandOutput
  >;
  private serialize;
  private deserialize;
}
