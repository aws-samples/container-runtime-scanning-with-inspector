import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import {
  AssociateEncryptionConfigCommandInput,
  AssociateEncryptionConfigCommandOutput,
} from "./commands/AssociateEncryptionConfigCommand";
import {
  AssociateIdentityProviderConfigCommandInput,
  AssociateIdentityProviderConfigCommandOutput,
} from "./commands/AssociateIdentityProviderConfigCommand";
import {
  CreateAddonCommandInput,
  CreateAddonCommandOutput,
} from "./commands/CreateAddonCommand";
import {
  CreateClusterCommandInput,
  CreateClusterCommandOutput,
} from "./commands/CreateClusterCommand";
import {
  CreateFargateProfileCommandInput,
  CreateFargateProfileCommandOutput,
} from "./commands/CreateFargateProfileCommand";
import {
  CreateNodegroupCommandInput,
  CreateNodegroupCommandOutput,
} from "./commands/CreateNodegroupCommand";
import {
  DeleteAddonCommandInput,
  DeleteAddonCommandOutput,
} from "./commands/DeleteAddonCommand";
import {
  DeleteClusterCommandInput,
  DeleteClusterCommandOutput,
} from "./commands/DeleteClusterCommand";
import {
  DeleteFargateProfileCommandInput,
  DeleteFargateProfileCommandOutput,
} from "./commands/DeleteFargateProfileCommand";
import {
  DeleteNodegroupCommandInput,
  DeleteNodegroupCommandOutput,
} from "./commands/DeleteNodegroupCommand";
import {
  DeregisterClusterCommandInput,
  DeregisterClusterCommandOutput,
} from "./commands/DeregisterClusterCommand";
import {
  DescribeAddonCommandInput,
  DescribeAddonCommandOutput,
} from "./commands/DescribeAddonCommand";
import {
  DescribeAddonConfigurationCommandInput,
  DescribeAddonConfigurationCommandOutput,
} from "./commands/DescribeAddonConfigurationCommand";
import {
  DescribeAddonVersionsCommandInput,
  DescribeAddonVersionsCommandOutput,
} from "./commands/DescribeAddonVersionsCommand";
import {
  DescribeClusterCommandInput,
  DescribeClusterCommandOutput,
} from "./commands/DescribeClusterCommand";
import {
  DescribeFargateProfileCommandInput,
  DescribeFargateProfileCommandOutput,
} from "./commands/DescribeFargateProfileCommand";
import {
  DescribeIdentityProviderConfigCommandInput,
  DescribeIdentityProviderConfigCommandOutput,
} from "./commands/DescribeIdentityProviderConfigCommand";
import {
  DescribeNodegroupCommandInput,
  DescribeNodegroupCommandOutput,
} from "./commands/DescribeNodegroupCommand";
import {
  DescribeUpdateCommandInput,
  DescribeUpdateCommandOutput,
} from "./commands/DescribeUpdateCommand";
import {
  DisassociateIdentityProviderConfigCommandInput,
  DisassociateIdentityProviderConfigCommandOutput,
} from "./commands/DisassociateIdentityProviderConfigCommand";
import {
  ListAddonsCommandInput,
  ListAddonsCommandOutput,
} from "./commands/ListAddonsCommand";
import {
  ListClustersCommandInput,
  ListClustersCommandOutput,
} from "./commands/ListClustersCommand";
import {
  ListFargateProfilesCommandInput,
  ListFargateProfilesCommandOutput,
} from "./commands/ListFargateProfilesCommand";
import {
  ListIdentityProviderConfigsCommandInput,
  ListIdentityProviderConfigsCommandOutput,
} from "./commands/ListIdentityProviderConfigsCommand";
import {
  ListNodegroupsCommandInput,
  ListNodegroupsCommandOutput,
} from "./commands/ListNodegroupsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListUpdatesCommandInput,
  ListUpdatesCommandOutput,
} from "./commands/ListUpdatesCommand";
import {
  RegisterClusterCommandInput,
  RegisterClusterCommandOutput,
} from "./commands/RegisterClusterCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateAddonCommandInput,
  UpdateAddonCommandOutput,
} from "./commands/UpdateAddonCommand";
import {
  UpdateClusterConfigCommandInput,
  UpdateClusterConfigCommandOutput,
} from "./commands/UpdateClusterConfigCommand";
import {
  UpdateClusterVersionCommandInput,
  UpdateClusterVersionCommandOutput,
} from "./commands/UpdateClusterVersionCommand";
import {
  UpdateNodegroupConfigCommandInput,
  UpdateNodegroupConfigCommandOutput,
} from "./commands/UpdateNodegroupConfigCommand";
import {
  UpdateNodegroupVersionCommandInput,
  UpdateNodegroupVersionCommandOutput,
} from "./commands/UpdateNodegroupVersionCommand";
import { EKSClient } from "./EKSClient";
export declare class EKS extends EKSClient {
  associateEncryptionConfig(
    args: AssociateEncryptionConfigCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateEncryptionConfigCommandOutput>;
  associateEncryptionConfig(
    args: AssociateEncryptionConfigCommandInput,
    cb: (err: any, data?: AssociateEncryptionConfigCommandOutput) => void
  ): void;
  associateEncryptionConfig(
    args: AssociateEncryptionConfigCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateEncryptionConfigCommandOutput) => void
  ): void;
  associateIdentityProviderConfig(
    args: AssociateIdentityProviderConfigCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateIdentityProviderConfigCommandOutput>;
  associateIdentityProviderConfig(
    args: AssociateIdentityProviderConfigCommandInput,
    cb: (err: any, data?: AssociateIdentityProviderConfigCommandOutput) => void
  ): void;
  associateIdentityProviderConfig(
    args: AssociateIdentityProviderConfigCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateIdentityProviderConfigCommandOutput) => void
  ): void;
  createAddon(
    args: CreateAddonCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAddonCommandOutput>;
  createAddon(
    args: CreateAddonCommandInput,
    cb: (err: any, data?: CreateAddonCommandOutput) => void
  ): void;
  createAddon(
    args: CreateAddonCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAddonCommandOutput) => void
  ): void;
  createCluster(
    args: CreateClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateClusterCommandOutput>;
  createCluster(
    args: CreateClusterCommandInput,
    cb: (err: any, data?: CreateClusterCommandOutput) => void
  ): void;
  createCluster(
    args: CreateClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateClusterCommandOutput) => void
  ): void;
  createFargateProfile(
    args: CreateFargateProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateFargateProfileCommandOutput>;
  createFargateProfile(
    args: CreateFargateProfileCommandInput,
    cb: (err: any, data?: CreateFargateProfileCommandOutput) => void
  ): void;
  createFargateProfile(
    args: CreateFargateProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateFargateProfileCommandOutput) => void
  ): void;
  createNodegroup(
    args: CreateNodegroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateNodegroupCommandOutput>;
  createNodegroup(
    args: CreateNodegroupCommandInput,
    cb: (err: any, data?: CreateNodegroupCommandOutput) => void
  ): void;
  createNodegroup(
    args: CreateNodegroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateNodegroupCommandOutput) => void
  ): void;
  deleteAddon(
    args: DeleteAddonCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAddonCommandOutput>;
  deleteAddon(
    args: DeleteAddonCommandInput,
    cb: (err: any, data?: DeleteAddonCommandOutput) => void
  ): void;
  deleteAddon(
    args: DeleteAddonCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAddonCommandOutput) => void
  ): void;
  deleteCluster(
    args: DeleteClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteClusterCommandOutput>;
  deleteCluster(
    args: DeleteClusterCommandInput,
    cb: (err: any, data?: DeleteClusterCommandOutput) => void
  ): void;
  deleteCluster(
    args: DeleteClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteClusterCommandOutput) => void
  ): void;
  deleteFargateProfile(
    args: DeleteFargateProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteFargateProfileCommandOutput>;
  deleteFargateProfile(
    args: DeleteFargateProfileCommandInput,
    cb: (err: any, data?: DeleteFargateProfileCommandOutput) => void
  ): void;
  deleteFargateProfile(
    args: DeleteFargateProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteFargateProfileCommandOutput) => void
  ): void;
  deleteNodegroup(
    args: DeleteNodegroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteNodegroupCommandOutput>;
  deleteNodegroup(
    args: DeleteNodegroupCommandInput,
    cb: (err: any, data?: DeleteNodegroupCommandOutput) => void
  ): void;
  deleteNodegroup(
    args: DeleteNodegroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteNodegroupCommandOutput) => void
  ): void;
  deregisterCluster(
    args: DeregisterClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeregisterClusterCommandOutput>;
  deregisterCluster(
    args: DeregisterClusterCommandInput,
    cb: (err: any, data?: DeregisterClusterCommandOutput) => void
  ): void;
  deregisterCluster(
    args: DeregisterClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeregisterClusterCommandOutput) => void
  ): void;
  describeAddon(
    args: DescribeAddonCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAddonCommandOutput>;
  describeAddon(
    args: DescribeAddonCommandInput,
    cb: (err: any, data?: DescribeAddonCommandOutput) => void
  ): void;
  describeAddon(
    args: DescribeAddonCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAddonCommandOutput) => void
  ): void;
  describeAddonConfiguration(
    args: DescribeAddonConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAddonConfigurationCommandOutput>;
  describeAddonConfiguration(
    args: DescribeAddonConfigurationCommandInput,
    cb: (err: any, data?: DescribeAddonConfigurationCommandOutput) => void
  ): void;
  describeAddonConfiguration(
    args: DescribeAddonConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAddonConfigurationCommandOutput) => void
  ): void;
  describeAddonVersions(
    args: DescribeAddonVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAddonVersionsCommandOutput>;
  describeAddonVersions(
    args: DescribeAddonVersionsCommandInput,
    cb: (err: any, data?: DescribeAddonVersionsCommandOutput) => void
  ): void;
  describeAddonVersions(
    args: DescribeAddonVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAddonVersionsCommandOutput) => void
  ): void;
  describeCluster(
    args: DescribeClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeClusterCommandOutput>;
  describeCluster(
    args: DescribeClusterCommandInput,
    cb: (err: any, data?: DescribeClusterCommandOutput) => void
  ): void;
  describeCluster(
    args: DescribeClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeClusterCommandOutput) => void
  ): void;
  describeFargateProfile(
    args: DescribeFargateProfileCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeFargateProfileCommandOutput>;
  describeFargateProfile(
    args: DescribeFargateProfileCommandInput,
    cb: (err: any, data?: DescribeFargateProfileCommandOutput) => void
  ): void;
  describeFargateProfile(
    args: DescribeFargateProfileCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeFargateProfileCommandOutput) => void
  ): void;
  describeIdentityProviderConfig(
    args: DescribeIdentityProviderConfigCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeIdentityProviderConfigCommandOutput>;
  describeIdentityProviderConfig(
    args: DescribeIdentityProviderConfigCommandInput,
    cb: (err: any, data?: DescribeIdentityProviderConfigCommandOutput) => void
  ): void;
  describeIdentityProviderConfig(
    args: DescribeIdentityProviderConfigCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeIdentityProviderConfigCommandOutput) => void
  ): void;
  describeNodegroup(
    args: DescribeNodegroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeNodegroupCommandOutput>;
  describeNodegroup(
    args: DescribeNodegroupCommandInput,
    cb: (err: any, data?: DescribeNodegroupCommandOutput) => void
  ): void;
  describeNodegroup(
    args: DescribeNodegroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeNodegroupCommandOutput) => void
  ): void;
  describeUpdate(
    args: DescribeUpdateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeUpdateCommandOutput>;
  describeUpdate(
    args: DescribeUpdateCommandInput,
    cb: (err: any, data?: DescribeUpdateCommandOutput) => void
  ): void;
  describeUpdate(
    args: DescribeUpdateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeUpdateCommandOutput) => void
  ): void;
  disassociateIdentityProviderConfig(
    args: DisassociateIdentityProviderConfigCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateIdentityProviderConfigCommandOutput>;
  disassociateIdentityProviderConfig(
    args: DisassociateIdentityProviderConfigCommandInput,
    cb: (
      err: any,
      data?: DisassociateIdentityProviderConfigCommandOutput
    ) => void
  ): void;
  disassociateIdentityProviderConfig(
    args: DisassociateIdentityProviderConfigCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DisassociateIdentityProviderConfigCommandOutput
    ) => void
  ): void;
  listAddons(
    args: ListAddonsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAddonsCommandOutput>;
  listAddons(
    args: ListAddonsCommandInput,
    cb: (err: any, data?: ListAddonsCommandOutput) => void
  ): void;
  listAddons(
    args: ListAddonsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAddonsCommandOutput) => void
  ): void;
  listClusters(
    args: ListClustersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListClustersCommandOutput>;
  listClusters(
    args: ListClustersCommandInput,
    cb: (err: any, data?: ListClustersCommandOutput) => void
  ): void;
  listClusters(
    args: ListClustersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListClustersCommandOutput) => void
  ): void;
  listFargateProfiles(
    args: ListFargateProfilesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListFargateProfilesCommandOutput>;
  listFargateProfiles(
    args: ListFargateProfilesCommandInput,
    cb: (err: any, data?: ListFargateProfilesCommandOutput) => void
  ): void;
  listFargateProfiles(
    args: ListFargateProfilesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListFargateProfilesCommandOutput) => void
  ): void;
  listIdentityProviderConfigs(
    args: ListIdentityProviderConfigsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListIdentityProviderConfigsCommandOutput>;
  listIdentityProviderConfigs(
    args: ListIdentityProviderConfigsCommandInput,
    cb: (err: any, data?: ListIdentityProviderConfigsCommandOutput) => void
  ): void;
  listIdentityProviderConfigs(
    args: ListIdentityProviderConfigsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListIdentityProviderConfigsCommandOutput) => void
  ): void;
  listNodegroups(
    args: ListNodegroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListNodegroupsCommandOutput>;
  listNodegroups(
    args: ListNodegroupsCommandInput,
    cb: (err: any, data?: ListNodegroupsCommandOutput) => void
  ): void;
  listNodegroups(
    args: ListNodegroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListNodegroupsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listUpdates(
    args: ListUpdatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListUpdatesCommandOutput>;
  listUpdates(
    args: ListUpdatesCommandInput,
    cb: (err: any, data?: ListUpdatesCommandOutput) => void
  ): void;
  listUpdates(
    args: ListUpdatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListUpdatesCommandOutput) => void
  ): void;
  registerCluster(
    args: RegisterClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterClusterCommandOutput>;
  registerCluster(
    args: RegisterClusterCommandInput,
    cb: (err: any, data?: RegisterClusterCommandOutput) => void
  ): void;
  registerCluster(
    args: RegisterClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterClusterCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateAddon(
    args: UpdateAddonCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAddonCommandOutput>;
  updateAddon(
    args: UpdateAddonCommandInput,
    cb: (err: any, data?: UpdateAddonCommandOutput) => void
  ): void;
  updateAddon(
    args: UpdateAddonCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAddonCommandOutput) => void
  ): void;
  updateClusterConfig(
    args: UpdateClusterConfigCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateClusterConfigCommandOutput>;
  updateClusterConfig(
    args: UpdateClusterConfigCommandInput,
    cb: (err: any, data?: UpdateClusterConfigCommandOutput) => void
  ): void;
  updateClusterConfig(
    args: UpdateClusterConfigCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateClusterConfigCommandOutput) => void
  ): void;
  updateClusterVersion(
    args: UpdateClusterVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateClusterVersionCommandOutput>;
  updateClusterVersion(
    args: UpdateClusterVersionCommandInput,
    cb: (err: any, data?: UpdateClusterVersionCommandOutput) => void
  ): void;
  updateClusterVersion(
    args: UpdateClusterVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateClusterVersionCommandOutput) => void
  ): void;
  updateNodegroupConfig(
    args: UpdateNodegroupConfigCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateNodegroupConfigCommandOutput>;
  updateNodegroupConfig(
    args: UpdateNodegroupConfigCommandInput,
    cb: (err: any, data?: UpdateNodegroupConfigCommandOutput) => void
  ): void;
  updateNodegroupConfig(
    args: UpdateNodegroupConfigCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateNodegroupConfigCommandOutput) => void
  ): void;
  updateNodegroupVersion(
    args: UpdateNodegroupVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateNodegroupVersionCommandOutput>;
  updateNodegroupVersion(
    args: UpdateNodegroupVersionCommandInput,
    cb: (err: any, data?: UpdateNodegroupVersionCommandOutput) => void
  ): void;
  updateNodegroupVersion(
    args: UpdateNodegroupVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateNodegroupVersionCommandOutput) => void
  ): void;
}
